C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:33:25 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE PROJECT2FUNCTIONS
OBJECT MODULE PLACED IN project2Functions.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE project2Functions.c OPTIMIZE(8,SPEED) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "project2.h"
   2          
   3          /**********************************************************
   4            * transmit
   5            * @desc   Transmits serially using the uart library
   6            *
   7            * @param1 String to be sent serially
   8            * @param2 Size of the string to be sent
   9          **********************************************************/
  10          void transmit(unsigned char msg[], unsigned char size)
  11          {
  12   1        unsigned char i = 0;
  13   1      
  14   1        uart_init();
  15   1        EA = 1;
  16   1        
  17   1        for(i = 0; i < size; i++)
  18   1        {
  19   2          uart_transmit(msg[i]);
  20   2        }
  21   1        uart_transmit('\n');
  22   1        uart_transmit('\0');
  23   1        
  24   1        EA = 0;
  25   1        
  26   1        return;
  27   1      }
  28          
  29          /**********************************************************
  30            * mode1
  31            * @desc   Operates mode 1 of the program:
  32            *         Playing sounds on button press,
  33            *         similar to a keyboard
  34          **********************************************************/
  35          void mode1()
  36          {
  37   1        bool x = true;
  38   1        LED9 = 0;
  39   1      
  40   1        while(x == true)
  41   1        {
  42   2          if(!SW1)  //C sound
  43   2          {
  44   3            setSevenSeg();
  45   3            SSB = 0;
  46   3            SSC = 0;
  47   3            SSG = 0;
  48   3            x = play_note(C6, 1);
  49   3            clearSevenSeg();
  50   3          }
  51   2      
  52   2          else if(!SW2) //D sound
  53   2          {
  54   3            setSevenSeg();
  55   3            SSB = 0;
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:33:25 PAGE 2   

  56   3            SSC = 0;
  57   3            x = play_note(D6, 1);
  58   3            clearSevenSeg();
  59   3          }
  60   2      
  61   2          else if(!SW3) //E sound
  62   2          {
  63   3            setSevenSeg();
  64   3            SSB = 0;
  65   3            SSC = 0;
  66   3            SSD = 0;
  67   3            x = play_note(E6, 1);
  68   3            clearSevenSeg();
  69   3          }
  70   2          else if (!SW9)
  71   2          {
  72   3            x = 0;
  73   3          }
  74   2        }
  75   1      
  76   1        LED9 = 1;
  77   1      }
  78          
  79          /**********************************************************
  80            * mode2
  81            * @desc   Operates mode 2 of the program:
  82            *         Playing music stored in code memory
  83            *         on button press
  84          **********************************************************/
  85          void mode2()
  86          {
  87   1        bool x = true;
  88   1        
  89   1        while(x == true)
  90   1        {
  91   2          LED8 = 0;
  92   2          if(SW1 == 0)
  93   2          {     
  94   3            clearSevenSeg();
  95   3      
  96   3            SSB = 1;
  97   3            SSC = 1;
  98   3            x = playSong(STAR);
  99   3            SSB = 0;
 100   3            SSC = 0;
 101   3          }
 102   2          else if(SW2 == 0)
 103   2          {
 104   3            setSevenSeg();
 105   3            SSC = 0;
 106   3            SSF = 0;
 107   3      
 108   3            x = playSong(SORC);
 109   3      
 110   3            clearSevenSeg();
 111   3          }
 112   2          else if (SW9 == 0)
 113   2          {
 114   3            x = false;
 115   3          }
 116   2        }
 117   1      
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:33:25 PAGE 3   

 118   1        clearSevenSeg();
 119   1        LED8 = 1;
 120   1      }
 121          
 122          /**********************************************************
 123            * mode3
 124            * @desc   Operates mode 3 of the program:
 125            *         Counter from 0 to F with rollover
 126            *         (similar to project 1)
 127            *         Output on the connected
 128            *         7 segment display
 129          **********************************************************/
 130          void mode3()
 131          {
 132   1        bool x = true;
 133   1        bool y = true;
 134   1        unsigned char count = 0;
 135   1        
 136   1        LED7 = 0;
 137   1        
 138   1        while(x)
 139   1        {
 140   2          if(!SW1)
 141   2          {
 142   3            count++;
 143   3            updateCount(count);
 144   3          }
 145   2      
 146   2          if(!SW3)
 147   2          {
 148   3            count--;
 149   3            updateCount(count);
 150   3          }
 151   2          
 152   2          delay();
 153   2          
 154   2          if(SW9 == 0)
 155   2          {
 156   3            x = false;
 157   3          }
 158   2      
 159   2          if(!SW2)
 160   2          {
 161   3            y = true;
 162   3      
 163   3            delay();
 164   3            clearSevenSeg();
 165   3            while(y)
 166   3            {
 167   4              SSA = 1;
 168   4              y = smDelay();
 169   4                
 170   4              if(!y)
 171   4                break;
 172   4                  
 173   4              SSA = 0;
 174   4              SSB = 1;
 175   4              y = smDelay();
 176   4                  
 177   4              if(!y)
 178   4                break;
 179   4                
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:33:25 PAGE 4   

 180   4              SSB = 0;
 181   4              SSC = 1;
 182   4              y = smDelay();
 183   4                
 184   4              if(!y)
 185   4                break;
 186   4                
 187   4              SSC = 0;
 188   4              SSD = 1;
 189   4              y = smDelay();
 190   4                
 191   4              if(!y)
 192   4                break;
 193   4                
 194   4              SSD = 0;
 195   4              SSE = 1;
 196   4              y = smDelay();
 197   4                
 198   4              if(!y)
 199   4                break;
 200   4                
 201   4              SSE = 0;
 202   4              SSF = 1;
 203   4              y = smDelay();
 204   4                
 205   4              if(!y)
 206   4                break;
 207   4            
 208   4              SSF = 0;
 209   4            }
 210   3          }
 211   2        }
 212   1        
 213   1        clearSevenSeg();
 214   1        LED7 = 1;
 215   1      }
 216          
 217          /**********************************************************
 218            * delay
 219            * @desc   A delay function, approximately
 220            *         0.2 seconds. Also, works without
 221            *         stopping timer 1 if running
 222          **********************************************************/
 223          void delay()
 224          {
 225   1        char i = 0;
 226   1      
 227   1        TMOD = TMOD & 0xf0;
 228   1        TMOD = TMOD | 0x01;
 229   1        TH0 = 0x00;
 230   1        TL0 = 0x00;
 231   1        for(i = 0; i < 12; i++)
 232   1        {
 233   2          TR0 = 1;
 234   2          while(TF0 == 0);
 235   2          TR0 = 0;
 236   2          TF0 = 0;
 237   2        }
 238   1      
 239   1        return;
 240   1      }
 241          
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:33:25 PAGE 5   

 242          /**********************************************************
 243            * setSevenSeg
 244            * @desc   Turns on all segments
 245            *         on the seven segment display
 246          **********************************************************/
 247          void setSevenSeg()
 248          {
 249   1        SSA = 1;
 250   1        SSB = 1;
 251   1        SSC = 1;
 252   1        SSD = 1;
 253   1        SSE = 1;
 254   1        SSF = 1;
 255   1        SSG = 1;
 256   1      
 257   1        return;
 258   1      }
 259          
 260          /**********************************************************
 261            * clearSevenSeg
 262            * @desc   Turns off all segments
 263            *         on the seven segment display
 264          **********************************************************/
 265          void clearSevenSeg()
 266          {
 267   1        SSA = 0;
 268   1        SSB = 0;
 269   1        SSC = 0;
 270   1        SSD = 0;
 271   1        SSE = 0;
 272   1        SSF = 0;
 273   1        SSG = 0;
 274   1        
 275   1        return;
 276   1      }
 277          
 278          /**********************************************************
 279            * Pattern
 280            * @desc   Timer 1 interrupt, for use
 281            *         during mode 2, to generate
 282            *         a simple light pattern while
 283            *         playing the song,
 284            *         with a .2 second delay
 285            *         between pattern changes
 286          **********************************************************/
 287          void Pattern() interrupt 3
 288          {
 289   1        static bool current = 0;
 290   1        static unsigned char x = 0;
 291   1        if (x == 0)
 292   1        {
 293   2          TF1 = 0;
 294   2          switch (current)
 295   2          {
 296   3            case 0:
 297   3              LED1 = 0;
 298   3              LED2 = 1;
 299   3              LED3 = 0;
 300   3              LED4 = 1;
 301   3              LED5 = 0;
 302   3              LED6 = 1;
 303   3              LED7 = 0;
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:33:25 PAGE 6   

 304   3              LED8 = 1;
 305   3              LED9 = 0;
 306   3              current = 1;
 307   3              break;
 308   3          
 309   3            case 1:
 310   3              LED1 = 1;
 311   3              LED2 = 0;
 312   3              LED3 = 1;
 313   3              LED4 = 0;
 314   3              LED5 = 1;
 315   3              LED6 = 0;
 316   3              LED7 = 1;
 317   3              LED8 = 0;
 318   3              LED9 = 1;
 319   3              current = 0;
 320   3              break;
 321   3          }
 322   2          x++;
 323   2        }
 324   1        else
 325   1        {
 326   2          x++;
 327   2          x = x % 12;
 328   2        }
 329   1      }
 330          
 331          /**********************************************************
 332            * clearLED
 333            * @desc   Turns off all LED's
 334            *         on the board
 335          **********************************************************/
 336          void clearLED()
 337          {
 338   1        LED1 = 1;
 339   1        LED2 = 1;
 340   1        LED3 = 1;
 341   1        LED4 = 1;
 342   1        LED5 = 1;
 343   1        LED6 = 1;
 344   1        LED7 = 1;
 345   1        LED8 = 1;
 346   1        LED9 = 1;
 347   1      }
 348          
 349          /**********************************************************
 350            * smDelay
 351            * @desc   Smaller delay function,
 352            *         approximately  seconds
 353          **********************************************************/
 354          bool smDelay()
 355          {
 356   1        int i;
 357   1        bool x;
 358   1        
 359   1        TMOD = TMOD & 0xf0;
 360   1        TMOD = TMOD | 0x01;
 361   1        TH0 = 0;
 362   1        TL0 = 0;
 363   1        TR0 = 1;
 364   1      
 365   1        for(i = 0; i < 6; i++)
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:33:25 PAGE 7   

 366   1        {
 367   2          while(!TF0);  
 368   2          TF0 = 0;
 369   2        }
 370   1      
 371   1        if(!SW2)
 372   1          x = false;
 373   1        
 374   1        return x;
 375   1      }
 376          
 377          /**********************************************************
 378            * updateCount
 379            * @desc   Updates the seven segment display to
 380            *         show the current count
 381          **********************************************************/
 382          void updateCount(unsigned char count)
 383          {
 384   1        if(count == 0)
 385   1        {
 386   2          setSevenSeg();
 387   2          SSG = 0;
 388   2        }
 389   1          
 390   1        else if (count == 1)
 391   1        {
 392   2          clearSevenSeg();
 393   2          SSB = 1;
 394   2          SSC = 1;
 395   2        }
 396   1        
 397   1        else if (count == 2)
 398   1        {
 399   2          setSevenSeg();
 400   2          SSC = 0;
 401   2          SSF = 0;
 402   2        }
 403   1          
 404   1        else if (count == 3)
 405   1        {
 406   2          setSevenSeg();
 407   2          SSE = 0;
 408   2          SSF = 0;
 409   2        }
 410   1            
 411   1        else if (count == 4)
 412   1        {
 413   2          setSevenSeg();
 414   2          SSA = 0;
 415   2          SSD = 0;
 416   2          SSE = 0;
 417   2        }
 418   1            
 419   1        else if (count == 5)
 420   1        {
 421   2          setSevenSeg();
 422   2          SSB = 0;
 423   2          SSE = 0;
 424   2        }
 425   1            
 426   1        else if (count == 6)
 427   1        {
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:33:25 PAGE 8   

 428   2          setSevenSeg();
 429   2          SSA = 0;
 430   2          SSB = 0;
 431   2        }
 432   1            
 433   1        else if (count == 7)
 434   1        {
 435   2          clearSevenSeg();
 436   2          SSA = 1;
 437   2          SSB = 1;
 438   2          SSC = 1;
 439   2        }
 440   1          
 441   1        else if (count == 8)
 442   1        {
 443   2          setSevenSeg();
 444   2        }
 445   1        
 446   1        else if (count == 9)
 447   1        {
 448   2          setSevenSeg();
 449   2          SSD = 0;
 450   2          SSE = 0;
 451   2        }
 452   1          
 453   1        else if (count == 10)
 454   1        {
 455   2          setSevenSeg();
 456   2          SSD = 0;
 457   2        }
 458   1            
 459   1        else if (count == 11)
 460   1        {
 461   2          setSevenSeg();
 462   2          SSA = 0;
 463   2          SSB = 0;
 464   2        }
 465   1            
 466   1        else if (count == 12)
 467   1        {
 468   2          setSevenSeg();
 469   2          SSB = 0;
 470   2          SSC = 0;
 471   2          SSG = 0;
 472   2        }
 473   1            
 474   1        else if (count == 13)
 475   1        {
 476   2          setSevenSeg();
 477   2          SSA = 0;
 478   2          SSF = 0;
 479   2        }
 480   1          
 481   1        else if (count == 14)
 482   1        {
 483   2          setSevenSeg();
 484   2          SSB = 0;
 485   2          SSC = 0;
 486   2        }
 487   1            
 488   1        else if (count == 15)
 489   1        {
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:33:25 PAGE 9   

 490   2          setSevenSeg();
 491   2          SSB = 0;
 492   2          SSC = 0;
 493   2          SSD = 0;
 494   2        }
 495   1            
 496   1        else if (count > 15)
 497   1        {
 498   2          count = 0;
 499   2          play_note(C6, 6);
 500   2          play_note(E6, 6);
 501   2          play_note(G6, 6);
 502   2          play_note(C7, 6);
 503   2        }
 504   1            
 505   1        else if(count < 0)
 506   1        {
 507   2          count = 15;
 508   2          play_note(C7, 6);
 509   2          play_note(G6, 6);
 510   2          play_note(E6, 6);
 511   2          play_note(C6, 6);
 512   2        }
 513   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    853    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
