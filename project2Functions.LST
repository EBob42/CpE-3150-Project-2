C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:56:52 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE PROJECT2FUNCTIONS
OBJECT MODULE PLACED IN project2Functions.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE project2Functions.c OPTIMIZE(8,SPEED) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "project2.h"
   2          
   3          /**********************************************************
   4            * transmit
   5            * @desc   Transmits serially using the uart library
   6            *
   7            * @param1 String to be sent serially
   8            * @param2 Size of the string to be sent
   9          **********************************************************/
  10          void transmit(unsigned char msg[], unsigned char size)
  11          {
  12   1        unsigned char i = 0;
  13   1      
  14   1        uart_init();
  15   1        EA = 1;
  16   1        
  17   1        for(i = 0; i < size; i++)
  18   1        {
  19   2          uart_transmit(msg[i]);
  20   2        }
  21   1        uart_transmit('\n');
  22   1        uart_transmit('\0');
  23   1        
  24   1        EA = 0;
  25   1        
  26   1        return;
  27   1      }
  28          
  29          /**********************************************************
  30            * mode1
  31            * @desc   Operates mode 1 of the program:
  32            *         Playing sounds on button press,
  33            *         similar to a keyboard
  34          **********************************************************/
  35          void mode1()
  36          {
  37   1        bool x = true;
  38   1        LED9 = 0;
  39   1      
  40   1        while(x == true)
  41   1        {
  42   2          if(!SW1)  //C sound
  43   2          {
  44   3            setSevenSeg();
  45   3            SSB = 0;
  46   3            SSC = 0;
  47   3            SSG = 0;
  48   3            x = play_note(C6, 1);
  49   3            clearSevenSeg();
  50   3          }
  51   2      
  52   2          else if(!SW2) //D sound
  53   2          {
  54   3            setSevenSeg();
  55   3            SSA = 0;
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:56:52 PAGE 2   

  56   3            SSF = 0;
  57   3            x = play_note(D6, 1);
  58   3            clearSevenSeg();
  59   3          }
  60   2      
  61   2          else if(!SW3) //E sound
  62   2          {
  63   3            setSevenSeg();
  64   3            SSB = 0;
  65   3            SSC = 0;
  66   3            x = play_note(E6, 1);
  67   3            clearSevenSeg();
  68   3          }
  69   2          else if (!SW9)
  70   2          {
  71   3            x = 0;
  72   3          }
  73   2        }
  74   1      
  75   1        LED9 = 1;
  76   1      }
  77          
  78          /**********************************************************
  79            * mode2
  80            * @desc   Operates mode 2 of the program:
  81            *         Playing music stored in code memory
  82            *         on button press
  83          **********************************************************/
  84          void mode2()
  85          {
  86   1        bool x = true;
  87   1        
  88   1        while(x == true)
  89   1        {
  90   2          LED8 = 0;
  91   2          if(SW1 == 0)
  92   2          {     
  93   3            clearSevenSeg();
  94   3      
  95   3            SSB = 1;
  96   3            SSC = 1;
  97   3            x = playSong(STAR);
  98   3            SSB = 0;
  99   3            SSC = 0;
 100   3          }
 101   2          else if(SW2 == 0)
 102   2          {
 103   3            setSevenSeg();
 104   3            SSC = 0;
 105   3            SSF = 0;
 106   3      
 107   3            x = playSong(SORC);
 108   3      
 109   3            clearSevenSeg();
 110   3          }
 111   2          else if (SW9 == 0)
 112   2          {
 113   3            x = false;
 114   3          }
 115   2        }
 116   1      
 117   1        clearSevenSeg();
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:56:52 PAGE 3   

 118   1        LED8 = 1;
 119   1      }
 120          
 121          /**********************************************************
 122            * mode3
 123            * @desc   Operates mode 3 of the program:
 124            *         Counter from 0 to F with rollover
 125            *         (similar to project 1)
 126            *         Output on the connected
 127            *         7 segment display
 128          **********************************************************/
 129          void mode3()
 130          {
 131   1        bool x = true;
 132   1        bool y = true;
 133   1        unsigned char count = 0;
 134   1        
 135   1        LED7 = 0;
 136   1        
 137   1        updateCount(count);
 138   1        
 139   1        while(x)
 140   1        {
 141   2          if(!SW1)
 142   2          {
 143   3            count++;
 144   3            if(count == 16)
 145   3            {
 146   4              count = 0;
 147   4              play_note(C6, 6);
 148   4              play_note(E6, 6);
 149   4              play_note(G6, 6);
 150   4              play_note(C7, 6);
 151   4            }
 152   3            updateCount(count);
 153   3          }
 154   2      
 155   2          if(!SW3)
 156   2          {
 157   3            count--;
 158   3            if(count == 255)
 159   3            {
 160   4              count = 15;
 161   4              play_note(C7, 6);
 162   4              play_note(G6, 6);
 163   4              play_note(E6, 6);
 164   4              play_note(C6, 6);
 165   4            }
 166   3            updateCount(count);
 167   3          }
 168   2          
 169   2          delay();
 170   2          
 171   2          if(SW9 == 0)
 172   2          {
 173   3            x = false;
 174   3          }
 175   2      
 176   2          if(!SW2)
 177   2          {
 178   3            y = true;
 179   3      
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:56:52 PAGE 4   

 180   3            delay();
 181   3            clearSevenSeg();
 182   3            while(y)
 183   3            {
 184   4              SSA = 1;
 185   4              y = smDelay();
 186   4                
 187   4              if(!y)
 188   4                break;
 189   4                  
 190   4              SSA = 0;
 191   4              SSB = 1;
 192   4              y = smDelay();
 193   4                  
 194   4              if(!y)
 195   4                break;
 196   4                
 197   4              SSB = 0;
 198   4              SSC = 1;
 199   4              y = smDelay();
 200   4                
 201   4              if(!y)
 202   4                break;
 203   4                
 204   4              SSC = 0;
 205   4              SSD = 1;
 206   4              y = smDelay();
 207   4                
 208   4              if(!y)
 209   4                break;
 210   4                
 211   4              SSD = 0;
 212   4              SSE = 1;
 213   4              y = smDelay();
 214   4                
 215   4              if(!y)
 216   4                break;
 217   4                
 218   4              SSE = 0;
 219   4              SSF = 1;
 220   4              y = smDelay();
 221   4                
 222   4              if(!y)
 223   4                break;
 224   4            
 225   4              SSF = 0;
 226   4            }
 227   3            updateCount(count);
 228   3          }
 229   2        }
 230   1        
 231   1        clearSevenSeg();
 232   1        LED7 = 1;
 233   1      }
 234          
 235          /**********************************************************
 236            * delay
 237            * @desc   A delay function, approximately
 238            *         0.2 seconds. Also, works without
 239            *         stopping timer 1 if running
 240          **********************************************************/
 241          void delay()
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:56:52 PAGE 5   

 242          {
 243   1        char i = 0;
 244   1      
 245   1        TMOD = TMOD & 0xf0;
 246   1        TMOD = TMOD | 0x01;
 247   1        TH0 = 0x00;
 248   1        TL0 = 0x00;
 249   1        for(i = 0; i < 12; i++)
 250   1        {
 251   2          TR0 = 1;
 252   2          while(TF0 == 0);
 253   2          TR0 = 0;
 254   2          TF0 = 0;
 255   2        }
 256   1      
 257   1        return;
 258   1      }
 259          
 260          /**********************************************************
 261            * setSevenSeg
 262            * @desc   Turns on all segments
 263            *         on the seven segment display
 264          **********************************************************/
 265          void setSevenSeg()
 266          {
 267   1        SSA = 1;
 268   1        SSB = 1;
 269   1        SSC = 1;
 270   1        SSD = 1;
 271   1        SSE = 1;
 272   1        SSF = 1;
 273   1        SSG = 1;
 274   1      
 275   1        return;
 276   1      }
 277          
 278          /**********************************************************
 279            * clearSevenSeg
 280            * @desc   Turns off all segments
 281            *         on the seven segment display
 282          **********************************************************/
 283          void clearSevenSeg()
 284          {
 285   1        SSA = 0;
 286   1        SSB = 0;
 287   1        SSC = 0;
 288   1        SSD = 0;
 289   1        SSE = 0;
 290   1        SSF = 0;
 291   1        SSG = 0;
 292   1        
 293   1        return;
 294   1      }
 295          
 296          /**********************************************************
 297            * Pattern
 298            * @desc   Timer 1 interrupt, for use
 299            *         during mode 2, to generate
 300            *         a simple light pattern while
 301            *         playing the song,
 302            *         with a .2 second delay
 303            *         between pattern changes
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:56:52 PAGE 6   

 304          **********************************************************/
 305          void Pattern() interrupt 3
 306          {
 307   1        static bool current = 0;
 308   1        static unsigned char x = 0;
 309   1        if (x == 0)
 310   1        {
 311   2          TF1 = 0;
 312   2          switch (current)
 313   2          {
 314   3            case 0:
 315   3              LED1 = 0;
 316   3              LED2 = 1;
 317   3              LED3 = 0;
 318   3              LED4 = 1;
 319   3              LED5 = 0;
 320   3              LED6 = 1;
 321   3              LED7 = 0;
 322   3              LED8 = 1;
 323   3              LED9 = 0;
 324   3              current = 1;
 325   3              break;
 326   3          
 327   3            case 1:
 328   3              LED1 = 1;
 329   3              LED2 = 0;
 330   3              LED3 = 1;
 331   3              LED4 = 0;
 332   3              LED5 = 1;
 333   3              LED6 = 0;
 334   3              LED7 = 1;
 335   3              LED8 = 0;
 336   3              LED9 = 1;
 337   3              current = 0;
 338   3              break;
 339   3          }
 340   2          x++;
 341   2        }
 342   1        else
 343   1        {
 344   2          x++;
 345   2          x = x % 12;
 346   2        }
 347   1      }
 348          
 349          /**********************************************************
 350            * clearLED
 351            * @desc   Turns off all LED's
 352            *         on the board
 353          **********************************************************/
 354          void clearLED()
 355          {
 356   1        LED1 = 1;
 357   1        LED2 = 1;
 358   1        LED3 = 1;
 359   1        LED4 = 1;
 360   1        LED5 = 1;
 361   1        LED6 = 1;
 362   1        LED7 = 1;
 363   1        LED8 = 1;
 364   1        LED9 = 1;
 365   1      }
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:56:52 PAGE 7   

 366          
 367          /**********************************************************
 368            * smDelay
 369            * @desc   Smaller delay function,
 370            *         approximately  seconds
 371          **********************************************************/
 372          bool smDelay()
 373          {
 374   1        int i;
 375   1        bool x;
 376   1        
 377   1        TMOD = TMOD & 0xf0;
 378   1        TMOD = TMOD | 0x01;
 379   1        TH0 = 0;
 380   1        TL0 = 0;
 381   1        TR0 = 1;
 382   1      
 383   1        for(i = 0; i < 6; i++)
 384   1        {
 385   2          while(!TF0);  
 386   2          TF0 = 0;
 387   2        }
 388   1      
 389   1        if(!SW2)
 390   1          x = false;
 391   1        
 392   1        return x;
 393   1      }
 394          
 395          /**********************************************************
 396            * updateCount
 397            * @desc   Updates the seven segment display to
 398            *         show the current count
 399          **********************************************************/
 400          void updateCount(unsigned char count)
 401          {
 402   1        switch(count)
 403   1        {
 404   2          case 0:
 405   2            setSevenSeg();
 406   2            SSG = 0;
 407   2            break;
 408   2          
 409   2          case 1:
 410   2            clearSevenSeg();
 411   2            SSB = 1;
 412   2            SSC = 1;
 413   2            break;
 414   2        
 415   2          case 2:
 416   2            setSevenSeg();
 417   2            SSC = 0;
 418   2            SSF = 0;
 419   2            break;
 420   2          
 421   2          case 3:
 422   2            setSevenSeg();
 423   2            SSE = 0;
 424   2            SSF = 0;
 425   2            break;
 426   2            
 427   2          case 4:
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:56:52 PAGE 8   

 428   2            setSevenSeg();
 429   2            SSA = 0;
 430   2            SSD = 0;
 431   2            SSE = 0;
 432   2            break;
 433   2            
 434   2          case 5:
 435   2            setSevenSeg();
 436   2            SSB = 0;
 437   2            SSE = 0;
 438   2            break;
 439   2            
 440   2          case 6:
 441   2            setSevenSeg();
 442   2            SSA = 0;
 443   2            SSB = 0;
 444   2            break;
 445   2            
 446   2          case 7:
 447   2            clearSevenSeg();
 448   2            SSA = 1;
 449   2            SSB = 1;
 450   2            SSC = 1;
 451   2          
 452   2          case 8:
 453   2            setSevenSeg();
 454   2            break;
 455   2        
 456   2          case 9:
 457   2            setSevenSeg();
 458   2            SSD = 0;
 459   2            SSE = 0;
 460   2            break;
 461   2          
 462   2          case 10:
 463   2            setSevenSeg();
 464   2            SSD = 0;
 465   2            break;
 466   2            
 467   2          case 11:
 468   2            setSevenSeg();
 469   2            SSA = 0;
 470   2            SSB = 0;
 471   2            break;
 472   2            
 473   2          case 12:
 474   2            setSevenSeg();
 475   2            SSB = 0;
 476   2            SSC = 0;
 477   2            SSG = 0;
 478   2            break;
 479   2            
 480   2          case 13:
 481   2            setSevenSeg();
 482   2            SSA = 0;
 483   2            SSF = 0;
 484   2            break;
 485   2          
 486   2          case 14:
 487   2            setSevenSeg();
 488   2            SSB = 0;
 489   2            SSC = 0;
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 17:56:52 PAGE 9   

 490   2            break;
 491   2            
 492   2          case 15:
 493   2            setSevenSeg();
 494   2            SSB = 0;
 495   2            SSC = 0;
 496   2            SSD = 0;
 497   2            break;
 498   2        }
 499   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    843    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
