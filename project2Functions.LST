C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 18:11:43 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE PROJECT2FUNCTIONS
OBJECT MODULE PLACED IN project2Functions.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE project2Functions.c OPTIMIZE(8,SPEED) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "project2.h"
   2          
   3          /**********************************************************
   4            * transmit
   5            * @desc   Transmits serially using the uart library
   6            *
   7            * @param1 String to be sent serially
   8            * @param2 Size of the string to be sent
   9          **********************************************************/
  10          void transmit(unsigned char msg[], unsigned char size)
  11          {
  12   1        unsigned char i = 0;
  13   1      
  14   1        uart_init();
  15   1        EA = 1;
  16   1        
  17   1        for(i = 0; i < size; i++)
  18   1        {
  19   2          uart_transmit(msg[i]);
  20   2        }
  21   1        uart_transmit('\n');
  22   1        uart_transmit('\0');
  23   1        
  24   1        EA = 0;
  25   1        
  26   1        return;
  27   1      }
  28          
  29          /**********************************************************
  30            * mode1
  31            * @desc   Operates mode 1 of the program:
  32            *         Playing sounds on button press,
  33            *         similar to a keyboard
  34          **********************************************************/
  35          void mode1()
  36          {
  37   1        bool x = true;
  38   1        LED9 = 0;
  39   1      
  40   1        while(x == true)
  41   1        {
  42   2          if(!SW1)  //C sound
  43   2          {
  44   3            setSevenSeg();
  45   3            SSB = 0;
  46   3            SSC = 0;
  47   3            SSG = 0;
  48   3            x = play_note(C6, 1);
  49   3            clearSevenSeg();
  50   3          }
  51   2      
  52   2          else if(!SW2) //D sound
  53   2          {
  54   3            setSevenSeg();
  55   3            SSA = 0;
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 18:11:43 PAGE 2   

  56   3            SSF = 0;
  57   3            x = play_note(D6, 1);
  58   3            clearSevenSeg();
  59   3          }
  60   2      
  61   2          else if(!SW3) //E sound
  62   2          {
  63   3            setSevenSeg();
  64   3            SSB = 0;
  65   3            SSC = 0;
  66   3            x = play_note(E6, 1);
  67   3            clearSevenSeg();
  68   3          }
  69   2          else if (!SW9)
  70   2          {
  71   3            x = 0;
  72   3          }
  73   2        }
  74   1      
  75   1        LED9 = 1;
  76   1      }
  77          
  78          /**********************************************************
  79            * mode2
  80            * @desc   Operates mode 2 of the program:
  81            *         Playing music stored in code memory
  82            *         on button press
  83          **********************************************************/
  84          void mode2()
  85          {
  86   1        bool x = true;
  87   1        
  88   1        while(x == true)
  89   1        {
  90   2          LED8 = 0;
  91   2          if(SW1 == 0)
  92   2          {     
  93   3            clearSevenSeg();
  94   3      
  95   3            SSB = 1;
  96   3            SSC = 1;
  97   3            x = playSong(STAR);
  98   3            SSB = 0;
  99   3            SSC = 0;
 100   3          }
 101   2          else if(SW2 == 0)
 102   2          {
 103   3            setSevenSeg();
 104   3            SSC = 0;
 105   3            SSF = 0;
 106   3      
 107   3            x = playSong(SORC);
 108   3      
 109   3            clearSevenSeg();
 110   3          }
 111   2          else if (SW9 == 0)
 112   2          {
 113   3            x = false;
 114   3          }
 115   2        }
 116   1      
 117   1        clearSevenSeg();
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 18:11:43 PAGE 3   

 118   1        LED8 = 1;
 119   1      }
 120          
 121          /**********************************************************
 122            * mode3
 123            * @desc   Operates mode 3 of the program:
 124            *         Counter from 0 to F with rollover
 125            *         (similar to project 1)
 126            *         Output on the connected
 127            *         7 segment display
 128          **********************************************************/
 129          void mode3()
 130          {
 131   1        bool x = true;
 132   1        bool y = true;
 133   1        unsigned char count = 0;
 134   1        unsigned char adder;
 135   1        bool adding = false;
 136   1        
 137   1        LED7 = 0;
 138   1        
 139   1        updateCount(count);
 140   1        
 141   1        while(x)
 142   1        {
 143   2          if(!SW1)
 144   2          {
 145   3            count++;
 146   3            if(count == 16)
 147   3            {
 148   4              count = 0;
 149   4              play_note(C6, 6);
 150   4              play_note(E6, 6);
 151   4              play_note(G6, 6);
 152   4              play_note(C7, 6);
 153   4            }
 154   3            updateCount(count);
 155   3          }
 156   2      
 157   2          if(!SW3)
 158   2          {
 159   3            count--;
 160   3            if(count == 255)
 161   3            {
 162   4              count = 15;
 163   4              play_note(C7, 6);
 164   4              play_note(G6, 6);
 165   4              play_note(E6, 6);
 166   4              play_note(C6, 6);
 167   4            }
 168   3            updateCount(count);
 169   3          }
 170   2          
 171   2          delay();
 172   2          
 173   2          if(SW9 == 0)
 174   2          {
 175   3            x = false;
 176   3          }
 177   2      
 178   2          if(!SW2)
 179   2          {
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 18:11:43 PAGE 4   

 180   3            y = true;
 181   3      
 182   3            delay();
 183   3            clearSevenSeg();
 184   3            while(y)
 185   3            {
 186   4              SSA = 1;
 187   4              y = smDelay();
 188   4                
 189   4              if(!y)
 190   4                break;
 191   4                  
 192   4              SSA = 0;
 193   4              SSB = 1;
 194   4              y = smDelay();
 195   4                  
 196   4              if(!y)
 197   4                break;
 198   4                
 199   4              SSB = 0;
 200   4              SSC = 1;
 201   4              y = smDelay();
 202   4                
 203   4              if(!y)
 204   4                break;
 205   4                
 206   4              SSC = 0;
 207   4              SSD = 1;
 208   4              y = smDelay();
 209   4                
 210   4              if(!y)
 211   4                break;
 212   4                
 213   4              SSD = 0;
 214   4              SSE = 1;
 215   4              y = smDelay();
 216   4                
 217   4              if(!y)
 218   4                break;
 219   4                
 220   4              SSE = 0;
 221   4              SSF = 1;
 222   4              y = smDelay();
 223   4                
 224   4              if(!y)
 225   4                break;
 226   4            
 227   4              SSF = 0;
 228   4            }
 229   3            updateCount(count);
 230   3          }
 231   2          
 232   2          if(!SW4)
 233   2          {
 234   3            if(adding == 0)
 235   3            {
 236   4              adder = count;
 237   4              count = 0;
 238   4              updateCount(count);
 239   4            }
 240   3            
 241   3            else
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 18:11:43 PAGE 5   

 242   3            {
 243   4              count = adder + count;
 244   4              if (count > 15)
 245   4              {
 246   5                count = count % 16;
 247   5                play_note(B6, 1);
 248   5                play_note(E7, 7);
 249   5              }
 250   4            }
 251   3          }
 252   2        }
 253   1        
 254   1        clearSevenSeg();
 255   1        LED7 = 1;
 256   1      }
 257          
 258          /**********************************************************
 259            * delay
 260            * @desc   A delay function, approximately
 261            *         0.2 seconds. Also, works without
 262            *         stopping timer 1 if running
 263          **********************************************************/
 264          void delay()
 265          {
 266   1        char i = 0;
 267   1      
 268   1        TMOD = TMOD & 0xf0;
 269   1        TMOD = TMOD | 0x01;
 270   1        TH0 = 0x00;
 271   1        TL0 = 0x00;
 272   1        for(i = 0; i < 12; i++)
 273   1        {
 274   2          TR0 = 1;
 275   2          while(TF0 == 0);
 276   2          TR0 = 0;
 277   2          TF0 = 0;
 278   2        }
 279   1      
 280   1        return;
 281   1      }
 282          
 283          /**********************************************************
 284            * setSevenSeg
 285            * @desc   Turns on all segments
 286            *         on the seven segment display
 287          **********************************************************/
 288          void setSevenSeg()
 289          {
 290   1        SSA = 1;
 291   1        SSB = 1;
 292   1        SSC = 1;
 293   1        SSD = 1;
 294   1        SSE = 1;
 295   1        SSF = 1;
 296   1        SSG = 1;
 297   1      
 298   1        return;
 299   1      }
 300          
 301          /**********************************************************
 302            * clearSevenSeg
 303            * @desc   Turns off all segments
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 18:11:43 PAGE 6   

 304            *         on the seven segment display
 305          **********************************************************/
 306          void clearSevenSeg()
 307          {
 308   1        SSA = 0;
 309   1        SSB = 0;
 310   1        SSC = 0;
 311   1        SSD = 0;
 312   1        SSE = 0;
 313   1        SSF = 0;
 314   1        SSG = 0;
 315   1        
 316   1        return;
 317   1      }
 318          
 319          /**********************************************************
 320            * Pattern
 321            * @desc   Timer 1 interrupt, for use
 322            *         during mode 2, to generate
 323            *         a simple light pattern while
 324            *         playing the song,
 325            *         with a .2 second delay
 326            *         between pattern changes
 327          **********************************************************/
 328          void Pattern() interrupt 3
 329          {
 330   1        static bool current = 0;
 331   1        static unsigned char x = 0;
 332   1        if (x == 0)
 333   1        {
 334   2          TF1 = 0;
 335   2          switch (current)
 336   2          {
 337   3            case 0:
 338   3              LED1 = 0;
 339   3              LED2 = 1;
 340   3              LED3 = 0;
 341   3              LED4 = 1;
 342   3              LED5 = 0;
 343   3              LED6 = 1;
 344   3              LED7 = 0;
 345   3              LED8 = 1;
 346   3              LED9 = 0;
 347   3              current = 1;
 348   3              break;
 349   3          
 350   3            case 1:
 351   3              LED1 = 1;
 352   3              LED2 = 0;
 353   3              LED3 = 1;
 354   3              LED4 = 0;
 355   3              LED5 = 1;
 356   3              LED6 = 0;
 357   3              LED7 = 1;
 358   3              LED8 = 0;
 359   3              LED9 = 1;
 360   3              current = 0;
 361   3              break;
 362   3          }
 363   2          x++;
 364   2        }
 365   1        else
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 18:11:43 PAGE 7   

 366   1        {
 367   2          x++;
 368   2          x = x % 12;
 369   2        }
 370   1      }
 371          
 372          /**********************************************************
 373            * clearLED
 374            * @desc   Turns off all LED's
 375            *         on the board
 376          **********************************************************/
 377          void clearLED()
 378          {
 379   1        LED1 = 1;
 380   1        LED2 = 1;
 381   1        LED3 = 1;
 382   1        LED4 = 1;
 383   1        LED5 = 1;
 384   1        LED6 = 1;
 385   1        LED7 = 1;
 386   1        LED8 = 1;
 387   1        LED9 = 1;
 388   1      }
 389          
 390          /**********************************************************
 391            * smDelay
 392            * @desc   Smaller delay function,
 393            *         approximately  seconds
 394          **********************************************************/
 395          bool smDelay()
 396          {
 397   1        int i;
 398   1        bool x;
 399   1        
 400   1        TMOD = TMOD & 0xf0;
 401   1        TMOD = TMOD | 0x01;
 402   1        TH0 = 0;
 403   1        TL0 = 0;
 404   1        TR0 = 1;
 405   1      
 406   1        for(i = 0; i < 6; i++)
 407   1        {
 408   2          while(!TF0);  
 409   2          TF0 = 0;
 410   2        }
 411   1      
 412   1        if(!SW2)
 413   1          x = false;
 414   1        
 415   1        return x;
 416   1      }
 417          
 418          /**********************************************************
 419            * updateCount
 420            * @desc   Updates the seven segment display to
 421            *         show the current count
 422          **********************************************************/
 423          void updateCount(unsigned char count)
 424          {
 425   1        switch(count)
 426   1        {
 427   2          case 0:
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 18:11:43 PAGE 8   

 428   2            setSevenSeg();
 429   2            SSG = 0;
 430   2            break;
 431   2          
 432   2          case 1:
 433   2            clearSevenSeg();
 434   2            SSB = 1;
 435   2            SSC = 1;
 436   2            break;
 437   2        
 438   2          case 2:
 439   2            setSevenSeg();
 440   2            SSC = 0;
 441   2            SSF = 0;
 442   2            break;
 443   2          
 444   2          case 3:
 445   2            setSevenSeg();
 446   2            SSE = 0;
 447   2            SSF = 0;
 448   2            break;
 449   2            
 450   2          case 4:
 451   2            setSevenSeg();
 452   2            SSA = 0;
 453   2            SSD = 0;
 454   2            SSE = 0;
 455   2            break;
 456   2            
 457   2          case 5:
 458   2            setSevenSeg();
 459   2            SSB = 0;
 460   2            SSE = 0;
 461   2            break;
 462   2            
 463   2          case 6:
 464   2            setSevenSeg();
 465   2            SSA = 0;
 466   2            SSB = 0;
 467   2            break;
 468   2            
 469   2          case 7:
 470   2            clearSevenSeg();
 471   2            SSA = 1;
 472   2            SSB = 1;
 473   2            SSC = 1;
 474   2          
 475   2          case 8:
 476   2            setSevenSeg();
 477   2            break;
 478   2        
 479   2          case 9:
 480   2            setSevenSeg();
 481   2            SSD = 0;
 482   2            SSE = 0;
 483   2            break;
 484   2          
 485   2          case 10:
 486   2            setSevenSeg();
 487   2            SSD = 0;
 488   2            break;
 489   2            
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 18:11:43 PAGE 9   

 490   2          case 11:
 491   2            setSevenSeg();
 492   2            SSA = 0;
 493   2            SSB = 0;
 494   2            break;
 495   2            
 496   2          case 12:
 497   2            setSevenSeg();
 498   2            SSB = 0;
 499   2            SSC = 0;
 500   2            SSG = 0;
 501   2            break;
 502   2            
 503   2          case 13:
 504   2            setSevenSeg();
 505   2            SSA = 0;
 506   2            SSF = 0;
 507   2            break;
 508   2          
 509   2          case 14:
 510   2            setSevenSeg();
 511   2            SSB = 0;
 512   2            SSC = 0;
 513   2            break;
 514   2            
 515   2          case 15:
 516   2            setSevenSeg();
 517   2            SSB = 0;
 518   2            SSC = 0;
 519   2            SSD = 0;
 520   2            break;
 521   2        }
 522   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    903    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
