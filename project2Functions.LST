C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:29:57 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE PROJECT2FUNCTIONS
OBJECT MODULE PLACED IN project2Functions.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE project2Functions.c OPTIMIZE(8,SPEED) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "project2.h"
   2          
   3          /**********************************************************
   4            * transmit
   5            * @desc   Transmits serially using the uart library
   6            *
   7            * @param1 String to be sent serially
   8            * @param2 Size of the string to be sent
   9          **********************************************************/
  10          void transmit(char msg[], char size)
  11          {
  12   1        char i = 0;
  13   1      
  14   1        uart_init();
  15   1      
  16   1        for(i = 0; i < size; i++)
  17   1        {
  18   2          uart_transmit(msg[i]);
  19   2        }
  20   1        uart_transmit('\n');
  21   1        uart_transmit('\0');
  22   1      
  23   1        return;
  24   1      }
  25          
  26          /**********************************************************
  27            * mode1
  28            * @desc   Operates mode 1 of the program:
  29            *         Playing sounds on button press,
  30            *         similar to a keyboard
  31          **********************************************************/
  32          void mode1()
  33          {
  34   1        bool x = true;
  35   1        LED9 = 0;
  36   1      
  37   1        while(x == true)
  38   1        {
  39   2          if(!SW1)  //C sound
  40   2          {
  41   3            x = play_note(C6, 1);
  42   3          }
  43   2      
  44   2          else if(!SW2) //D sound
  45   2          {
  46   3            x = play_note(D6, 1);
  47   3          }
  48   2      
  49   2          else if(!SW3) //E sound
  50   2          {
  51   3            x = play_note(E6, 1);
  52   3          }
  53   2          else if (!SW9)
  54   2          {
  55   3            x = 0;
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:29:57 PAGE 2   

  56   3          }
  57   2        }
  58   1      
  59   1        LED9 = 1;
  60   1      }
  61          
  62          /**********************************************************
  63            * mode2
  64            * @desc   Operates mode 2 of the program:
  65            *         Playing music stored in code memory
  66            *         on button press
  67          **********************************************************/
  68          void mode2()
  69          {
  70   1        bool x = true;
  71   1        
  72   1        while(x == true)
  73   1        {
  74   2          LED8 = 0;
  75   2          if(SW1 == 0)
  76   2          {     
  77   3            clearSevenSeg();
  78   3      
  79   3            SSB = 1;
  80   3            SSC = 1;
  81   3            x = playSong(STAR);
  82   3            SSB = 0;
  83   3            SSC = 0;
  84   3          }
  85   2          else if(SW2 == 0)
  86   2          {
  87   3            setSevenSeg();
  88   3            SSC = 0;
  89   3            SSF = 0;
  90   3      
  91   3            x = playSong(SORC);
  92   3      
  93   3            clearSevenSeg();
  94   3          }
  95   2          else if (SW9 == 0)
  96   2          {
  97   3            x = false;
  98   3          }
  99   2        }
 100   1      
 101   1        clearSevenSeg();
 102   1        LED8 = 1;
 103   1      }
 104          
 105          /**********************************************************
 106            * mode3
 107            * @desc   Operates mode 3 of the program:
 108            *         Counter from 0 to F with rollover
 109            *         (similar to project 1)
 110            *         Output on the connected
 111            *         7 segment display
 112          **********************************************************/
 113          void mode3()
 114          {
 115   1        bool x = true;
 116   1        bool y = true;
 117   1        int count = 0;
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:29:57 PAGE 3   

 118   1        
 119   1        LED7 = 0;
 120   1        
 121   1        while(x)
 122   1        {
 123   2          if(!SW1)
 124   2          {
 125   3            count++;
 126   3          }
 127   2      
 128   2          if(!SW3)
 129   2          {
 130   3            count--;
 131   3          }
 132   2          
 133   2          delay();
 134   2          
 135   2          if(SW9 == 0)
 136   2          {
 137   3            x = false;
 138   3          }
 139   2          
 140   2          else
 141   2          {
 142   3            if(count == 0)
 143   3            {
 144   4              setSevenSeg();
 145   4              SSG = 0;
 146   4            }
 147   3            
 148   3            else if (count == 1)
 149   3            {
 150   4              clearSevenSeg();
 151   4              SSB = 1;
 152   4              SSC = 1;
 153   4            }
 154   3            
 155   3            else if (count == 2)
 156   3            {
 157   4              setSevenSeg();
 158   4              SSC = 0;
 159   4              SSF = 0;
 160   4            }
 161   3            
 162   3            else if (count == 3)
 163   3            {
 164   4              setSevenSeg();
 165   4              SSE = 0;
 166   4              SSF = 0;
 167   4            }
 168   3            
 169   3            else if (count == 4)
 170   3            {
 171   4              setSevenSeg();
 172   4              SSA = 0;
 173   4              SSD = 0;
 174   4              SSE = 0;
 175   4            }
 176   3            
 177   3            else if (count == 5)
 178   3            {
 179   4              setSevenSeg();
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:29:57 PAGE 4   

 180   4              SSB = 0;
 181   4              SSE = 0;
 182   4            }
 183   3            
 184   3            else if (count == 6)
 185   3            {
 186   4              setSevenSeg();
 187   4              SSA = 0;
 188   4              SSB = 0;
 189   4            }
 190   3            
 191   3            else if (count == 7)
 192   3            {
 193   4              clearSevenSeg();
 194   4              SSA = 1;
 195   4              SSB = 1;
 196   4              SSC = 1;
 197   4            }
 198   3            
 199   3            else if (count == 8)
 200   3            {
 201   4              setSevenSeg();
 202   4            }
 203   3            
 204   3            else if (count == 9)
 205   3            {
 206   4              setSevenSeg();
 207   4              SSD = 0;
 208   4              SSE = 0;
 209   4            }
 210   3            
 211   3            else if (count == 10)
 212   3            {
 213   4              setSevenSeg();
 214   4              SSD = 0;
 215   4            }
 216   3            
 217   3            else if (count == 11)
 218   3            {
 219   4              setSevenSeg();
 220   4              SSA = 0;
 221   4              SSB = 0;
 222   4            }
 223   3            
 224   3            else if (count == 12)
 225   3            {
 226   4              setSevenSeg();
 227   4              SSB = 0;
 228   4              SSC = 0;
 229   4              SSG = 0;
 230   4            }
 231   3            
 232   3            else if (count == 13)
 233   3            {
 234   4              setSevenSeg();
 235   4              SSA = 0;
 236   4              SSF = 0;
 237   4            }
 238   3            
 239   3            else if (count == 14)
 240   3            {
 241   4              setSevenSeg();
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:29:57 PAGE 5   

 242   4              SSB = 0;
 243   4              SSC = 0;
 244   4            }
 245   3            
 246   3            else if (count == 15)
 247   3            {
 248   4              setSevenSeg();
 249   4              SSB = 0;
 250   4              SSC = 0;
 251   4              SSD = 0;
 252   4            }
 253   3            
 254   3            else if (count > 15)
 255   3            {
 256   4              count = 0;
 257   4              x = play_note(C6, 6);
 258   4              x = play_note(E6, 6);
 259   4              x = play_note(G6, 6);
 260   4              x = play_note(C7, 6);
 261   4            }
 262   3      
 263   3            else if(count < 0)
 264   3            {
 265   4              count = 15;
 266   4              x = play_note(C7, 6);
 267   4              x = play_note(G6, 6);
 268   4              x = play_note(E6, 6);
 269   4              x = play_note(C6, 6);
 270   4            }
 271   3          }
 272   2      
 273   2          if(!SW2)
 274   2          {
 275   3            y = true;
 276   3      
 277   3            delay();
 278   3            clearSevenSeg();
 279   3            while(y)
 280   3            {
 281   4              SSA = 1;
 282   4              y = smDelay();
 283   4                
 284   4              if(!y)
 285   4                break;
 286   4                  
 287   4              SSA = 0;
 288   4              SSB = 1;
 289   4              y = smDelay();
 290   4                  
 291   4              if(!y)
 292   4                break;
 293   4                
 294   4              SSB = 0;
 295   4              SSC = 1;
 296   4              y = smDelay();
 297   4                
 298   4              if(!y)
 299   4                break;
 300   4                
 301   4              SSC = 0;
 302   4              SSD = 1;
 303   4              y = smDelay();
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:29:57 PAGE 6   

 304   4                
 305   4              if(!y)
 306   4                break;
 307   4                
 308   4              SSD = 0;
 309   4              SSE = 1;
 310   4              y = smDelay();
 311   4                
 312   4              if(!y)
 313   4                break;
 314   4                
 315   4              SSE = 0;
 316   4              SSF = 1;
 317   4              y = smDelay();
 318   4                
 319   4              if(!y)
 320   4                break;
 321   4            
 322   4              SSF = 0;
 323   4            }
 324   3          }
 325   2        }
 326   1        
 327   1        clearSevenSeg();
 328   1        LED7 = 1;
 329   1      }
 330          
 331          /**********************************************************
 332            * delay
 333            * @desc   A delay function, approximately
 334            *         0.2 seconds. Also, works without
 335            *         stopping timer 1 if running
 336          **********************************************************/
 337          void delay()
 338          {
 339   1        char i = 0;
 340   1      
 341   1        TMOD = TMOD & 0xf0;
 342   1        TMOD = TMOD | 0x01;
 343   1        TH0 = 0x00;
 344   1        TL0 = 0x00;
 345   1        for(i = 0; i < 12; i++)
 346   1        {
 347   2          TR0 = 1;
 348   2          while(TF0 == 0);
 349   2          TR0 = 0;
 350   2          TF0 = 0;
 351   2        }
 352   1      
 353   1        return;
 354   1      }
 355          
 356          /**********************************************************
 357            * setSevenSeg
 358            * @desc   Turns on all segments
 359            *         on the seven segment display
 360          **********************************************************/
 361          void setSevenSeg()
 362          {
 363   1        SSA = 1;
 364   1        SSB = 1;
 365   1        SSC = 1;
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:29:57 PAGE 7   

 366   1        SSD = 1;
 367   1        SSE = 1;
 368   1        SSF = 1;
 369   1        SSG = 1;
 370   1      
 371   1        return;
 372   1      }
 373          
 374          /**********************************************************
 375            * clearSevenSeg
 376            * @desc   Turns off all segments
 377            *         on the seven segment display
 378          **********************************************************/
 379          void clearSevenSeg()
 380          {
 381   1        SSA = 0;
 382   1        SSB = 0;
 383   1        SSC = 0;
 384   1        SSD = 0;
 385   1        SSE = 0;
 386   1        SSF = 0;
 387   1        SSG = 0;
 388   1        
 389   1        return;
 390   1      }
 391          
 392          /**********************************************************
 393            * Pattern
 394            * @desc   Timer 1 interrupt, for use
 395            *         during mode 2, to generate
 396            *         a simple light pattern while
 397            *         playing the song,
 398            *         with a .2 second delay
 399            *         between pattern changes
 400          **********************************************************/
 401          void Pattern() interrupt 3
 402          {
 403   1        static bool current = 0;
 404   1        static unsigned char x = 0;
 405   1        if (x == 0)
 406   1        {
 407   2          TF1 = 0;
 408   2          switch (current)
 409   2          {
 410   3            case 0:
 411   3              LED1 = 0;
 412   3              LED2 = 1;
 413   3              LED3 = 0;
 414   3              LED4 = 1;
 415   3              LED5 = 0;
 416   3              LED6 = 1;
 417   3              LED7 = 0;
 418   3              LED8 = 1;
 419   3              LED9 = 0;
 420   3              current = 1;
 421   3              break;
 422   3          
 423   3            case 1:
 424   3              LED1 = 1;
 425   3              LED2 = 0;
 426   3              LED3 = 1;
 427   3              LED4 = 0;
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:29:57 PAGE 8   

 428   3              LED5 = 1;
 429   3              LED6 = 0;
 430   3              LED7 = 1;
 431   3              LED8 = 0;
 432   3              LED9 = 1;
 433   3              current = 0;
 434   3              break;
 435   3          }
 436   2          x++;
 437   2        }
 438   1        else
 439   1        {
 440   2          x++;
 441   2          x = x % 12;
 442   2        }
 443   1      }
 444          
 445          /**********************************************************
 446            * clearLED
 447            * @desc   Turns off all LED's
 448            *         on the board
 449          **********************************************************/
 450          void clearLED()
 451          {
 452   1        LED1 = 1;
 453   1        LED2 = 1;
 454   1        LED3 = 1;
 455   1        LED4 = 1;
 456   1        LED5 = 1;
 457   1        LED6 = 1;
 458   1        LED7 = 1;
 459   1        LED8 = 1;
 460   1        LED9 = 1;
 461   1      }
 462          
 463          /**********************************************************
 464            * smDelay
 465            * @desc   Smaller delay function,
 466            *         approximately  seconds
 467          **********************************************************/
 468          bool smDelay()
 469          {
 470   1        int i;
 471   1        bool x;
 472   1        
 473   1        TMOD = TMOD & 0xf0;
 474   1        TMOD = TMOD | 0x01;
 475   1        TH0 = 0;
 476   1        TL0 = 0;
 477   1        TR0 = 1;
 478   1      
 479   1        for(i = 0; i < 6; i++)
 480   1        {
 481   2          while(!TF0);  
 482   2          TF0 = 0;
 483   2        }
 484   1      
 485   1        if(!SW2)
 486   1          x = false;
 487   1        
 488   1        return x;
 489   1      }
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:29:57 PAGE 9   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    954    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
