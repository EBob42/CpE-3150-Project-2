C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/09/2014 18:04:39 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE PROJECT2FUNCTIONS
OBJECT MODULE PLACED IN project2Functions.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE project2Functions.c OPTIMIZE(8,SPEED) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "project2.h"
   2          
   3          void transmit(char msg[], int size)
   4          {
   5   1        int i = 0;
   6   1        EA = 1;
   7   1      
   8   1        uart_init();
   9   1      
  10   1        for(i = 0; i < size; i++)
  11   1        {
  12   2          uart_transmit(msg[i]);
  13   2        }
  14   1        uart_transmit('\0');
  15   1        EA = 0;
  16   1      
  17   1        return;
  18   1      }
  19          
  20          
  21          //TODO: Determine if this is the desired functionality, or if
  22          //      something more musical is desired.
  23          //      Also, check the condition on this loop, determine how to
  24          //      make sure we can change mode properly and what-not
  25          //      And be sure of active high or low buttons, make sure 
  26          //      if statements reflect that properly
  27          //
  28          //      Determine if the return and parameter are still needed
  29          
  30          void mode1()  //plays random sound when button is pressed
  31          {
  32   1        bool x = true;
  33   1        LED9 = 0;
  34   1        //transmit("Mode 1", 6);
  35   1      
  36   1        while(x == true)
  37   1        {
  38   2          if(!SW1)  //C sound
  39   2          {
  40   3          x = play_note(C6, 1);
  41   3          }
  42   2      
  43   2          else if(!SW2) //D sound
  44   2          {
  45   3            x = play_note(D6, 1);
  46   3          }
  47   2      
  48   2          else if(!SW3) //E sound
  49   2          {
  50   3            x = play_note(E6, 1);
  51   3          }
  52   2        else if (!SW9)
  53   2        {
  54   3          x = 0;
  55   3        }
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/09/2014 18:04:39 PAGE 2   

  56   2        }
  57   1      
  58   1        LED9 = 1;
  59   1      }
  60          
  61          void mode2()
  62          {
  63   1        bool x = true;
  64   1        LED8 = 0;
  65   1        
  66   1        while(x == true)
  67   1        {
  68   2          if(SW1 == 0)
  69   2          {
  70   3            x = playSong(STAR);
  71   3          }
  72   2          else if(SW2 == 0)
  73   2          {
  74   3            x = playSong(SORC);
  75   3          }
  76   2          else if (SW3 == 0)
  77   2          {
  78   3            x = playSong(POKE);
  79   3          }
  80   2          else if (SW9 == 0)
  81   2          {
  82   3            x = false;
  83   3          }
  84   2        }
  85   1      
  86   1        LED8 = 1;
  87   1      }
  88          
  89          //TODO: Decide if we need a 3rd mode
  90          void mode3()
  91          {
  92   1          bool x = true;
  93   1        int count = 0;
  94   1        
  95   1        LED3 = 0;
  96   1        
  97   1        while(x)
  98   1        {
  99   2          if(!SW1)
 100   2          {
 101   3            count++;
 102   3            }
 103   2          
 104   2          delay();
 105   2          
 106   2          if(SW9 == 0)
 107   2          {
 108   3            x = false;
 109   3          }
 110   2          
 111   2          else
 112   2          {
 113   3            if(count == 0)
 114   3            {
 115   4              setSevenSeg();
 116   4              SSG = 0;
 117   4            }
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/09/2014 18:04:39 PAGE 3   

 118   3            
 119   3            else if (count == 1)
 120   3            {
 121   4              clearSevenSeg();
 122   4              SSB = 1;
 123   4              SSC = 1;
 124   4            }
 125   3            
 126   3            else if (count == 2)
 127   3            {
 128   4              setSevenSeg();
 129   4              SSC = 0;
 130   4              SSF = 0;
 131   4            }
 132   3            
 133   3            else if (count == 3)
 134   3            {
 135   4              setSevenSeg();
 136   4              SSC = 0;
 137   4              SSF = 0;
 138   4            }
 139   3            
 140   3            else if (count == 4)
 141   3            {
 142   4              setSevenSeg();
 143   4              SSA = 0;
 144   4              SSD = 0;
 145   4              SSE = 0;
 146   4            }
 147   3            
 148   3            else if (count == 5)
 149   3            {
 150   4              setSevenSeg();
 151   4              SSB = 0;
 152   4              SSE = 0;
 153   4            }
 154   3            
 155   3            else if (count == 6)
 156   3            {
 157   4              setSevenSeg();
 158   4              SSA = 0;
 159   4              SSB = 0;
 160   4            }
 161   3            
 162   3            else if (count == 7)
 163   3            {
 164   4              clearSevenSeg();
 165   4              SSA = 1;
 166   4              SSB = 1;
 167   4              SSC = 1;
 168   4            }
 169   3            
 170   3            else if (count == 8)
 171   3            {
 172   4              setSevenSeg();
 173   4            }
 174   3            
 175   3            else if (count == 9)
 176   3            {
 177   4              setSevenSeg();
 178   4              SSD = 0;
 179   4              SSE = 0;
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/09/2014 18:04:39 PAGE 4   

 180   4            }
 181   3            
 182   3            else if (count == 10)
 183   3            {
 184   4              setSevenSeg();
 185   4              SSD = 0;
 186   4            }
 187   3            
 188   3            else if (count == 11)
 189   3            {
 190   4              setSevenSeg();
 191   4              SSA = 0;
 192   4              SSB = 0;
 193   4            }
 194   3            
 195   3            else if (count == 12)
 196   3            {
 197   4              setSevenSeg();
 198   4              SSB = 0;
 199   4              SSC = 0;
 200   4            }
 201   3            
 202   3            else if (count == 13)
 203   3            {
 204   4              setSevenSeg();
 205   4              SSA = 0;
 206   4              SSF = 0;
 207   4            }
 208   3            
 209   3            else if (count == 14)
 210   3            {
 211   4              setSevenSeg();
 212   4              SSB = 0;
 213   4              SSC = 0;
 214   4            }
 215   3            
 216   3            else if (count == 15)
 217   3            {
 218   4              setSevenSeg();
 219   4              SSB = 0;
 220   4              SSC = 0;
 221   4              SSD = 0;
 222   4            }
 223   3            
 224   3            else if (count > 15)
 225   3            {
 226   4              count = 0;
 227   4            }
 228   3          }
 229   2        }
 230   1        
 231   1        clearSevenSeg();
 232   1        LED3 = 1;
 233   1      }
 234          
 235          void delay()
 236          {
 237   1        char i = 0;
 238   1      
 239   1          TMOD = TMOD & 0xf0;
 240   1        TMOD = TMOD | 0x01;
 241   1        TH0 = 0x00;
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/09/2014 18:04:39 PAGE 5   

 242   1        TL0 = 0x00;
 243   1        for(i = 0; i < 12; i++)
 244   1        {
 245   2          TR0 = 1;
 246   2          while(TF0 == 0);
 247   2          TR0 = 0;
 248   2          TF0 = 0;
 249   2        }
 250   1      
 251   1        return;
 252   1      }
 253          
 254          void setSevenSeg()
 255          {
 256   1        SSA = 1;
 257   1        SSB = 1;
 258   1        SSC = 1;
 259   1        SSD = 1;
 260   1        SSE = 1;
 261   1        SSF = 1;
 262   1        SSG = 1;
 263   1      
 264   1        return;
 265   1      }
 266          
 267          void clearSevenSeg()
 268          {
 269   1        SSA = 0;
 270   1        SSB = 0;
 271   1        SSC = 0;
 272   1        SSD = 0;
 273   1        SSE = 0;
 274   1        SSF = 0;
 275   1        SSG = 0;
 276   1        
 277   1        return;
 278   1      }
 279          
 280          void Pattern() interrupt 3
 281          {
 282   1        static bool current = 0;
 283   1        TF1 = 0;
 284   1        switch (current)
 285   1        {
 286   2          case 0:
 287   2            LED1 = 0;
 288   2            LED2 = 1;
 289   2            LED3 = 0;
 290   2            LED4 = 1;
 291   2            LED5 = 0;
 292   2            LED6 = 1;
 293   2            LED7 = 0;
 294   2            LED8 = 1;
 295   2            LED9 = 0;
 296   2            current = 1;
 297   2            break;
 298   2          
 299   2          case 1:
 300   2            LED1 = 1;
 301   2            LED2 = 0;
 302   2            LED3 = 1;
 303   2            LED4 = 0;
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/09/2014 18:04:39 PAGE 6   

 304   2            LED5 = 1;
 305   2            LED6 = 0;
 306   2            LED7 = 1;
 307   2            LED8 = 0;
 308   2            LED9 = 1;
 309   2            current = 0;
 310   2            break;
 311   2        }
 312   1      }
 313          
 314          void clearLED()
 315          {
 316   1        LED1 = 1;
 317   1        LED2 = 1;
 318   1        LED3 = 1;
 319   1        LED4 = 1;
 320   1        LED5 = 1;
 321   1        LED6 = 1;
 322   1        LED7 = 1;
 323   1        LED8 = 1;
 324   1        LED9 = 1;
 325   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    624    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
