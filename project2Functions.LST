C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:54:51 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE PROJECT2FUNCTIONS
OBJECT MODULE PLACED IN project2Functions.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE project2Functions.c OPTIMIZE(8,SPEED) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "project2.h"
   2          
   3          /**********************************************************
   4            * transmit
   5            * @desc   Transmits serially using the uart library
   6            *
   7            * @param1 String to be sent serially
   8            * @param2 Size of the string to be sent
   9          **********************************************************/
  10          void transmit(unsigned char msg[], unsigned char size)
  11          {
  12   1        unsigned char i = 0;
  13   1      
  14   1        uart_init();
  15   1      
  16   1        for(i = 0; i < size; i++)
  17   1        {
  18   2          uart_transmit(msg[i]);
  19   2        }
  20   1        uart_transmit('\n');
  21   1        uart_transmit('\0');
  22   1      
  23   1        return;
  24   1      }
  25          
  26          /**********************************************************
  27            * mode1
  28            * @desc   Operates mode 1 of the program:
  29            *         Playing sounds on button press,
  30            *         similar to a keyboard
  31          **********************************************************/
  32          void mode1()
  33          {
  34   1        bool x = true;
  35   1        LED9 = 0;
  36   1      
  37   1        while(x == true)
  38   1        {
  39   2          if(!SW1)  //C sound
  40   2          {
  41   3            x = play_note(C6, 1);
  42   3          }
  43   2      
  44   2          else if(!SW2) //D sound
  45   2          {
  46   3            x = play_note(D6, 1);
  47   3          }
  48   2      
  49   2          else if(!SW3) //E sound
  50   2          {
  51   3            x = play_note(E6, 1);
  52   3          }
  53   2          else if (!SW9)
  54   2          {
  55   3            x = 0;
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:54:51 PAGE 2   

  56   3          }
  57   2        }
  58   1      
  59   1        LED9 = 1;
  60   1      }
  61          
  62          /**********************************************************
  63            * mode2
  64            * @desc   Operates mode 2 of the program:
  65            *         Playing music stored in code memory
  66            *         on button press
  67          **********************************************************/
  68          void mode2()
  69          {
  70   1        bool x = true;
  71   1        
  72   1        while(x == true)
  73   1        {
  74   2          LED8 = 0;
  75   2          if(SW1 == 0)
  76   2          {     
  77   3            clearSevenSeg();
  78   3      
  79   3            SSB = 1;
  80   3            SSC = 1;
  81   3            x = playSong(STAR);
  82   3            SSB = 0;
  83   3            SSC = 0;
  84   3          }
  85   2          else if(SW2 == 0)
  86   2          {
  87   3            setSevenSeg();
  88   3            SSC = 0;
  89   3            SSF = 0;
  90   3      
  91   3            x = playSong(SORC);
  92   3      
  93   3            clearSevenSeg();
  94   3          }
  95   2          else if (SW9 == 0)
  96   2          {
  97   3            x = false;
  98   3          }
  99   2        }
 100   1      
 101   1        clearSevenSeg();
 102   1        LED8 = 1;
 103   1      }
 104          
 105          /**********************************************************
 106            * mode3
 107            * @desc   Operates mode 3 of the program:
 108            *         Counter from 0 to F with rollover
 109            *         (similar to project 1)
 110            *         Output on the connected
 111            *         7 segment display
 112          **********************************************************/
 113          void mode3()
 114          {
 115   1        bool x = true;
 116   1        bool y = true;
 117   1        unsigned char count = 0;
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:54:51 PAGE 3   

 118   1        
 119   1        LED7 = 0;
 120   1        
 121   1        while(x)
 122   1        {
 123   2          if(!SW1)
 124   2          {
 125   3            count++;
 126   3            updateCount(count);
 127   3          }
 128   2      
 129   2          if(!SW3)
 130   2          {
 131   3            count--;
 132   3            updateCount(count);
 133   3          }
 134   2          
 135   2          delay();
 136   2          
 137   2          if(SW9 == 0)
 138   2          {
 139   3            x = false;
 140   3          }
 141   2      
 142   2          if(!SW2)
 143   2          {
 144   3            y = true;
 145   3      
 146   3            delay();
 147   3            clearSevenSeg();
 148   3            while(y)
 149   3            {
 150   4              SSA = 1;
 151   4              y = smDelay();
 152   4                
 153   4              if(!y)
 154   4                break;
 155   4                  
 156   4              SSA = 0;
 157   4              SSB = 1;
 158   4              y = smDelay();
 159   4                  
 160   4              if(!y)
 161   4                break;
 162   4                
 163   4              SSB = 0;
 164   4              SSC = 1;
 165   4              y = smDelay();
 166   4                
 167   4              if(!y)
 168   4                break;
 169   4                
 170   4              SSC = 0;
 171   4              SSD = 1;
 172   4              y = smDelay();
 173   4                
 174   4              if(!y)
 175   4                break;
 176   4                
 177   4              SSD = 0;
 178   4              SSE = 1;
 179   4              y = smDelay();
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:54:51 PAGE 4   

 180   4                
 181   4              if(!y)
 182   4                break;
 183   4                
 184   4              SSE = 0;
 185   4              SSF = 1;
 186   4              y = smDelay();
 187   4                
 188   4              if(!y)
 189   4                break;
 190   4            
 191   4              SSF = 0;
 192   4            }
 193   3          }
 194   2        }
 195   1        
 196   1        clearSevenSeg();
 197   1        LED7 = 1;
 198   1      }
 199          
 200          /**********************************************************
 201            * delay
 202            * @desc   A delay function, approximately
 203            *         0.2 seconds. Also, works without
 204            *         stopping timer 1 if running
 205          **********************************************************/
 206          void delay()
 207          {
 208   1        char i = 0;
 209   1      
 210   1        TMOD = TMOD & 0xf0;
 211   1        TMOD = TMOD | 0x01;
 212   1        TH0 = 0x00;
 213   1        TL0 = 0x00;
 214   1        for(i = 0; i < 12; i++)
 215   1        {
 216   2          TR0 = 1;
 217   2          while(TF0 == 0);
 218   2          TR0 = 0;
 219   2          TF0 = 0;
 220   2        }
 221   1      
 222   1        return;
 223   1      }
 224          
 225          /**********************************************************
 226            * setSevenSeg
 227            * @desc   Turns on all segments
 228            *         on the seven segment display
 229          **********************************************************/
 230          void setSevenSeg()
 231          {
 232   1        SSA = 1;
 233   1        SSB = 1;
 234   1        SSC = 1;
 235   1        SSD = 1;
 236   1        SSE = 1;
 237   1        SSF = 1;
 238   1        SSG = 1;
 239   1      
 240   1        return;
 241   1      }
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:54:51 PAGE 5   

 242          
 243          /**********************************************************
 244            * clearSevenSeg
 245            * @desc   Turns off all segments
 246            *         on the seven segment display
 247          **********************************************************/
 248          void clearSevenSeg()
 249          {
 250   1        SSA = 0;
 251   1        SSB = 0;
 252   1        SSC = 0;
 253   1        SSD = 0;
 254   1        SSE = 0;
 255   1        SSF = 0;
 256   1        SSG = 0;
 257   1        
 258   1        return;
 259   1      }
 260          
 261          /**********************************************************
 262            * Pattern
 263            * @desc   Timer 1 interrupt, for use
 264            *         during mode 2, to generate
 265            *         a simple light pattern while
 266            *         playing the song,
 267            *         with a .2 second delay
 268            *         between pattern changes
 269          **********************************************************/
 270          void Pattern() interrupt 3
 271          {
 272   1        static bool current = 0;
 273   1        static unsigned char x = 0;
 274   1        if (x == 0)
 275   1        {
 276   2          TF1 = 0;
 277   2          switch (current)
 278   2          {
 279   3            case 0:
 280   3              LED1 = 0;
 281   3              LED2 = 1;
 282   3              LED3 = 0;
 283   3              LED4 = 1;
 284   3              LED5 = 0;
 285   3              LED6 = 1;
 286   3              LED7 = 0;
 287   3              LED8 = 1;
 288   3              LED9 = 0;
 289   3              current = 1;
 290   3              break;
 291   3          
 292   3            case 1:
 293   3              LED1 = 1;
 294   3              LED2 = 0;
 295   3              LED3 = 1;
 296   3              LED4 = 0;
 297   3              LED5 = 1;
 298   3              LED6 = 0;
 299   3              LED7 = 1;
 300   3              LED8 = 0;
 301   3              LED9 = 1;
 302   3              current = 0;
 303   3              break;
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:54:51 PAGE 6   

 304   3          }
 305   2          x++;
 306   2        }
 307   1        else
 308   1        {
 309   2          x++;
 310   2          x = x % 12;
 311   2        }
 312   1      }
 313          
 314          /**********************************************************
 315            * clearLED
 316            * @desc   Turns off all LED's
 317            *         on the board
 318          **********************************************************/
 319          void clearLED()
 320          {
 321   1        LED1 = 1;
 322   1        LED2 = 1;
 323   1        LED3 = 1;
 324   1        LED4 = 1;
 325   1        LED5 = 1;
 326   1        LED6 = 1;
 327   1        LED7 = 1;
 328   1        LED8 = 1;
 329   1        LED9 = 1;
 330   1      }
 331          
 332          /**********************************************************
 333            * smDelay
 334            * @desc   Smaller delay function,
 335            *         approximately  seconds
 336          **********************************************************/
 337          bool smDelay()
 338          {
 339   1        int i;
 340   1        bool x;
 341   1        
 342   1        TMOD = TMOD & 0xf0;
 343   1        TMOD = TMOD | 0x01;
 344   1        TH0 = 0;
 345   1        TL0 = 0;
 346   1        TR0 = 1;
 347   1      
 348   1        for(i = 0; i < 6; i++)
 349   1        {
 350   2          while(!TF0);  
 351   2          TF0 = 0;
 352   2        }
 353   1      
 354   1        if(!SW2)
 355   1          x = false;
 356   1        
 357   1        return x;
 358   1      }
 359          
 360          /**********************************************************
 361            * updateCount
 362            * @desc   Updates the seven segment display to
 363            *         show the current count
 364          **********************************************************/
 365          void updateCount(unsigned char count)
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:54:51 PAGE 7   

 366          {
 367   1        if(count == 0)
 368   1        {
 369   2          setSevenSeg();
 370   2          SSG = 0;
 371   2        }
 372   1          
 373   1        else if (count == 1)
 374   1        {
 375   2          clearSevenSeg();
 376   2          SSB = 1;
 377   2          SSC = 1;
 378   2        }
 379   1        
 380   1        else if (count == 2)
 381   1        {
 382   2          setSevenSeg();
 383   2          SSC = 0;
 384   2          SSF = 0;
 385   2        }
 386   1          
 387   1        else if (count == 3)
 388   1        {
 389   2          setSevenSeg();
 390   2          SSE = 0;
 391   2          SSF = 0;
 392   2        }
 393   1            
 394   1        else if (count == 4)
 395   1        {
 396   2          setSevenSeg();
 397   2          SSA = 0;
 398   2          SSD = 0;
 399   2          SSE = 0;
 400   2        }
 401   1            
 402   1        else if (count == 5)
 403   1        {
 404   2          setSevenSeg();
 405   2          SSB = 0;
 406   2          SSE = 0;
 407   2        }
 408   1            
 409   1        else if (count == 6)
 410   1        {
 411   2          setSevenSeg();
 412   2          SSA = 0;
 413   2          SSB = 0;
 414   2        }
 415   1            
 416   1        else if (count == 7)
 417   1        {
 418   2          clearSevenSeg();
 419   2          SSA = 1;
 420   2          SSB = 1;
 421   2          SSC = 1;
 422   2        }
 423   1          
 424   1        else if (count == 8)
 425   1        {
 426   2          setSevenSeg();
 427   2        }
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:54:51 PAGE 8   

 428   1        
 429   1        else if (count == 9)
 430   1        {
 431   2          setSevenSeg();
 432   2          SSD = 0;
 433   2          SSE = 0;
 434   2        }
 435   1          
 436   1        else if (count == 10)
 437   1        {
 438   2          setSevenSeg();
 439   2          SSD = 0;
 440   2        }
 441   1            
 442   1        else if (count == 11)
 443   1        {
 444   2          setSevenSeg();
 445   2          SSA = 0;
 446   2          SSB = 0;
 447   2        }
 448   1            
 449   1        else if (count == 12)
 450   1        {
 451   2          setSevenSeg();
 452   2          SSB = 0;
 453   2          SSC = 0;
 454   2          SSG = 0;
 455   2        }
 456   1            
 457   1        else if (count == 13)
 458   1        {
 459   2          setSevenSeg();
 460   2          SSA = 0;
 461   2          SSF = 0;
 462   2        }
 463   1          
 464   1        else if (count == 14)
 465   1        {
 466   2          setSevenSeg();
 467   2          SSB = 0;
 468   2          SSC = 0;
 469   2        }
 470   1            
 471   1        else if (count == 15)
 472   1        {
 473   2          setSevenSeg();
 474   2          SSB = 0;
 475   2          SSC = 0;
 476   2          SSD = 0;
 477   2        }
 478   1            
 479   1        else if (count > 15)
 480   1        {
 481   2          count = 0;
 482   2          play_note(C6, 6);
 483   2          play_note(E6, 6);
 484   2          play_note(G6, 6);
 485   2          play_note(C7, 6);
 486   2        }
 487   1            
 488   1        else if(count < 0)
 489   1        {
C51 COMPILER V9.53.0.0   PROJECT2FUNCTIONS                                                 12/10/2014 16:54:51 PAGE 9   

 490   2          count = 15;
 491   2          play_note(C7, 6);
 492   2          play_note(G6, 6);
 493   2          play_note(E6, 6);
 494   2          play_note(C6, 6);
 495   2        }
 496   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    816    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
