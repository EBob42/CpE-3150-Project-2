C51 COMPILER V9.53.0.0   MUSIC                                                             12/10/2014 10:49:40 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MUSIC
OBJECT MODULE PLACED IN music.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE music.c OPTIMIZE(8,SPEED) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "project2.h"
   2          
   3          code unsigned int star_hz[42] = {F5, F5, F5, BF5, F6, EF6, D6, C6, BF6, F6, EF6, D6, C6, BF6, F6, EF6, D6,
             - EF6, C6, F5, F5, F5, BF5, F6, EF6, D6, C6, BF6, F6, EF6, D6, C6, BF6, F6, C7, BF6, A6, BF6, BF5, BF5, BF5, BF5};
   4          code unsigned char star_dur[42] = {E3, E3, E3, H, H, E3, E3, E3, H, Q, E3, E3, E3, H, Q, E3, E3, E3, H, E3
             -, E3, E3, H, H, E3, E3, E3, H, Q, E3, E3, E3, H, Q, E3, E3, E3, Q, E3, E3, E3, Q};
   5          code char star_name[9] = "Star Wars";
   6          
   7          code unsigned int sorc_hz[57] = {F5, C6, C5, D5, E5, F5, AF5, F5, AF5, G5, F5, E5, F5, AF5, F5, AF5, G5, F
             -5, E5, F5, AF5, F5, AF5, G5, F5, G5, AF5, G5, BF5, AF5, G5, B5, F5, AF5, G5, BF5, AF5, G5, B5, F5, AF5, BF5, C6, C6, C6,
             - C6, D6, E6, F6, E6, F6, G6, C6, D6, E6, F6, F5};
   8          code unsigned char sorc_dur[57] = {DQ, DQ, E, E, E, Q, E, Q, E, E, E, E, Q, E, Q, E, E, E, E, Q, E, E, E, 
             -E, E, E, E, E, E, E, Q, E, Q, E, E, E, E, Q, E, E, E, E, E, E, E, E, E, E, E, E, E, DQ, E, E, E, DQ, DQ};
   9          code char sorc_name[21] = "Sorceror's Apprentice";
  10            
  11          code unsigned char notes[2] = {42, 57};
  12          
  13          bool playSong(Song s)
  14          {
  15   1        bool x = true;
  16   1        switch (s)
  17   1        {
  18   2          case STAR:
  19   2            transmit(star_name, 9);
  20   2            x = play_song(star_hz, star_dur, notes[0]);
  21   2            break;
  22   2            
  23   2          case SORC:
  24   2            transmit(sorc_name, 21);
  25   2            x = play_song(sorc_hz, sorc_dur, notes[1]);
  26   2            break;
  27   2        }
  28   1        return x;
  29   1      }
  30          
  31          bool play_song(unsigned int hz[], unsigned char dur[], unsigned char length)
  32          {
  33   1        unsigned char i;
  34   1        bool x;
  35   1        
  36   1        TMOD = 0x10;
  37   1        TH1 = 0x00;
  38   1        TL1 = 0x00;
  39   1        TR1 = 1;
  40   1        
  41   1        for (i = 0; i < length; ++i)
  42   1        {
  43   2          play_small_delay();
  44   2          x = play_note(hz[i], dur[i]);
  45   2          if (x == false)
  46   2          {
  47   3            IEN0 = 0x00;
  48   3            TR1 = 0;
  49   3            clearLED();
  50   3            return false;
C51 COMPILER V9.53.0.0   MUSIC                                                             12/10/2014 10:49:40 PAGE 2   

  51   3          }
  52   2        }
  53   1        
  54   1        TR1 = 0;
  55   1        IEN0 = 0x00;
  56   1        clearLED();
  57   1        return true;
  58   1      }
  59          
  60          bool play_note(unsigned int hz, unsigned char dur)
  61          {
  62   1        unsigned int i, time;
  63   1        unsigned char high, low;
  64   1        
  65   1        time = hz * dur / 18;
  66   1        i = 0xFFFF - 61425 / hz*30 + 1;
  67   1        high = i / 256;
  68   1        low = i % 256;
  69   1        
  70   1        TMOD = TMOD & 0xf0;
  71   1        TMOD = TMOD | 0x01;
  72   1        
  73   1        for (i = 0; i < time; ++i)
  74   1        {
  75   2          TH0 = high;
  76   2          TL0 = low;
  77   2          TR0 = 1;
  78   2          while (TF0 == 0)
  79   2          {
  80   3            if(SW9 == 0)
  81   3              return false;
  82   3          }
  83   2          TR0 = 0;
  84   2          TF0 = 0;
  85   2          SPK = ~SPK;
  86   2        }
  87   1        return true;
  88   1      }
  89          
  90          void play_small_delay()
  91          {
  92   1        TMOD = TMOD & 0xf0;
  93   1        TMOD = TMOD | 0x02;
  94   1        TH0 = 0x00;
  95   1        TR0 = 1;
  96   1        while(TF0 == 0);
  97   1        TR0 = 0;
  98   1        TF0 = 0;
  99   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    313    ----
   CONSTANT SIZE    =    329    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
