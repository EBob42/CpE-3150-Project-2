C51 COMPILER V9.53.0.0   MUSIC                                                             12/09/2014 17:43:54 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MUSIC
OBJECT MODULE PLACED IN music.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE music.c OPTIMIZE(8,SPEED) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "project2.h"
   2          
   3          //TODO: Actually make these songs
   4          code unsigned int star_hz[42] = {F5, F5, F5, BF5, F6, EF6, D6, C6, BF6, F6, EF6, D6, C6, BF6, F6, EF6, D6,
             - EF6, C6, F5, F5, F5, BF5, F6, EF6, D6, C6, BF6, F6, EF6, D6, C6, BF6, F6, C7, BF6, A6, BF6, BF5, BF5, BF5, BF5};
   5          code unsigned char star_dur[42] = {E3, E3, E3, H, H, E3, E3, E3, H, Q, E3, E3, E3, H, Q, E3, E3, E3, H, E3
             -, E3, E3, H, H, E3, E3, E3, H, Q, E3, E3, E3, H, Q, E3, E3, E3, Q, E3, E3, E3, Q};
   6          code char star_name[9] = "Star Wars";
   7          
   8          code unsigned int sorc_hz[57] = {F5, C6, C5, D5, E5, F5, AF5, F5, AF5, G5, F5, E5, F5, AF5, F5, AF5, G5, F
             -5, E5, F5, AF5, F5, AF5, G5, F5, G5, AF5, G5, BF5, AF5, G5, B5, F5, AF5, G5, BF5, AF5, G5, B5, F5, AF5, BF5, C6, C6, C6,
             - C6, D6, E6, F6, E6, F6, G6, C6, D6, E6, F6, F5};
   9          code unsigned char sorc_dur[57] = {DQ, DQ, E, E, E, Q, E, Q, E, E, E, E, Q, E, Q, E, E, E, E, Q, E, E, E, 
             -E, E, E, E, E, E, E, Q, E, Q, E, E, E, E, Q, E, E, E, E, E, E, E, E, E, E, E, E, E, DQ, E, E, E, DQ, DQ};
  10          code char sorc_name[21] = "Sorceror's Apprentice";
  11            
  12          code unsigned int poke_hz[1] = {500};
  13          code unsigned char poke_dur[1] = {Q};
  14          code char poke_name[7] = "Pokemon";
  15            
  16          code unsigned char notes[3] = {42, 57, 1};
  17          
  18          bool playSong(Song s)
  19          {
  20   1        bool x = true;
  21   1        switch (s)
  22   1        {
  23   2          case STAR:
  24   2            transmit(star_name, 9);
  25   2            x = play_song(star_hz, star_dur, notes[0]);
  26   2            break;
  27   2            
  28   2          case SORC:
  29   2            transmit(sorc_name, 21);
  30   2            x = play_song(sorc_hz, sorc_dur, notes[1]);
  31   2            break;
  32   2            
  33   2          case POKE:
  34   2            transmit(poke_name, 7);
  35   2            x = play_song(poke_hz, poke_dur, notes[2]);
  36   2            break;
  37   2        }
  38   1        return x;
  39   1      }
  40          
  41          bool play_song(unsigned int hz[], unsigned char dur[], unsigned char length)
  42          {
  43   1        unsigned char i;
  44   1        bool x;
  45   1        
  46   1        IEN0 = 0x88;
  47   1        TMOD = 0x10;
  48   1        TH1 = 0x00;
  49   1        TL1 = 0x00;
  50   1        TR1 = 1;
C51 COMPILER V9.53.0.0   MUSIC                                                             12/09/2014 17:43:54 PAGE 2   

  51   1        
  52   1        for (i = 0; i < length; ++i)
  53   1        {
  54   2          play_small_delay();
  55   2          x = play_note(hz[i], dur[i]);
  56   2          if (x == false)
  57   2          {
  58   3            IEN0 = 0x00;
  59   3            TR1 = 0;
  60   3            return false;
  61   3          }
  62   2        }
  63   1        
  64   1        TR1 = 0;
  65   1        IEN0 = 0x00;
  66   1        return true;
  67   1      }
  68          
  69          bool play_note(unsigned int hz, unsigned char dur)
  70          {
  71   1        unsigned int i, time;
  72   1        unsigned char high, low;
  73   1        
  74   1        time = hz * dur / 18;
  75   1        i = 0xFFFF - 61425 / hz*30 + 1;
  76   1        high = i / 256;
  77   1        low = i % 256;
  78   1        
  79   1        TMOD = TMOD & 0xf0;
  80   1        TMOD = TMOD | 0x01;
  81   1        
  82   1        for (i = 0; i < time; ++i)
  83   1        {
  84   2          TH0 = high;
  85   2          TL0 = low;
  86   2          TR0 = 1;
  87   2          while (TF0 == 0)
  88   2          {
  89   3            //TODO: Verify if this button choice works
  90   3            if(SW9 == 0)
  91   3              return false;
  92   3          }
  93   2          TR0 = 0;
  94   2          TF0 = 0;
  95   2          SPK = ~SPK;
  96   2        }
  97   1        return true;
  98   1      }
  99          
 100          void play_small_delay()
 101          {
 102   1        TMOD = TMOD & 0xf0;
 103   1        TMOD = TMOD | 0x02;
 104   1        TH0 = 0x00;
 105   1        TR0 = 1;
 106   1        while(TF0 == 0);
 107   1        TR0 = 0;
 108   1        TF0 = 0;
 109   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.53.0.0   MUSIC                                                             12/09/2014 17:43:54 PAGE 3   

   CODE SIZE        =    350    ----
   CONSTANT SIZE    =    340    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
